{"version":3,"sources":["components/EventModal/EventModal.js","actions/event.js","containers/Calendar/Calendar.js","components/Sidebar/Sidebar.js","components/Header/Header.js","containers/App/App.js","serviceWorker.js","reducers/events.js","reducers/index.js","index.js"],"names":["EventModal","props","event","title","start","end","time","notes","open","style","close","handleChange","save","clickEvent","changeableEvent","errorMessage","editEvent","deleteEvent","date","toLocaleDateString","changedDate","changeableEventStart","changeableEventEnd","changeableEventDate","className","color","size","onClick","undefined","name","type","placeholder","value","onChange","e","id","ADD_EVENT","RESIZE_AND_DRAG_EVENT","CHANGE_EVENT","DELETE_EVENT","addEvent","payload","resizeAndDragEvent","changeEvent","localizer","momentLocalizer","moment","DragAndDropCalendar","withDragAndDrop","Calendar","currentDate","toDate","Date","children","React","cloneElement","Children","only","backgroundColor","toDateString","CalendarContainer","state","displayDragItemInCell","events","openEventModal","left","top","newEvent","allDay","handleDragStart","setState","draggedEvent","dragFromOutsideItem","onDropFromOutside","moveEvent","droppedOnAllDaySlot","isAllDay","map","existingEvent","resizeEvent","hours","window","setHours","today","setMinutes","getTime","alert","resourceId","box","bounds","x","y","oldState","closeEventModal","target","prevState","addNewEvent","chooseEvent","findEvent","find","pageX","pageY","prevProps","this","culture","startAccessor","endAccessor","defaultView","height","width","selectable","onEventDrop","resizable","onEventResize","popup","step","onSelectEvent","onSelectSlot","components","dateCellWrapper","Component","connect","EventActions","Sidebar","src","alt","href","Header","App","Boolean","location","hostname","match","initialState","combineReducers","action","Number","split","minutes","modifierEvent","array","filter","push","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f28e55b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {IoMdTime, IoIosCloseCircleOutline, IoMdArrowDropup} from 'react-icons/io'\r\nimport {RiCalendar2Line, RiArrowUpSLine} from 'react-icons/ri';\r\nimport './styles.scss';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst EventModal = (props) => {\r\n    const {\r\n        event: {title, start, end, time, notes},\r\n        open,\r\n        style,\r\n        close,\r\n        handleChange,\r\n        save,\r\n        clickEvent,\r\n        changeableEvent,\r\n        errorMessage,\r\n        editEvent,\r\n        deleteEvent\r\n    } = props;\r\n    const date = start !== '' && start.toLocaleDateString();\r\n    const changedDate =\r\n        start !== '' && `${start.toLocaleDateString()} - ${end.toLocaleDateString()}`;\r\n    const changeableEventStart =\r\n        changeableEvent !== null && changeableEvent.start.toLocaleDateString();\r\n    const changeableEventEnd =\r\n        changeableEvent !== null && changeableEvent.end.toLocaleDateString();\r\n    const changeableEventDate =\r\n        changeableEvent !== null && `${changeableEvent.start.toLocaleDateString()} - ${changeableEvent.end.toLocaleDateString()}`\r\n    return (\r\n        <div className={open ? \"event\" : \"disable\"} style={style}>\r\n            {clickEvent === 'create'\r\n                ?\r\n                <IoMdArrowDropup className=\"event__arrow\" color=\"#43425D\" size={25}/>\r\n                :\r\n                <RiArrowUpSLine className=\"event__arrow-change\" color=\"#43425D\" size={20}/>\r\n            }\r\n            <IoIosCloseCircleOutline className=\"event__close\" size={20} color=\"#D6D6D6\" onClick={close}/>\r\n            <div className=\"event__name\">\r\n                <input className={errorMessage && title === '' ? \"error\" : undefined} name=\"title\" type=\"text\"\r\n                       placeholder={errorMessage ? \"enter name event\" : \"event name\"}\r\n                       value={changeableEvent !== null ? changeableEvent.title : title}\r\n                       onChange={changeableEvent === null ? (e) => handleChange(e) : (e) => handleChange(e, 'edit')}/>\r\n            </div>\r\n            <div className=\"event__date\">\r\n                <input className={errorMessage && date === '' ? \"error\" : undefined} name=\"date\" type=\"text\"\r\n                       placeholder={errorMessage ? \"enter date event\" : \"event date\"}\r\n                       value={\r\n                           changeableEvent === null\r\n                               ?\r\n                               start !== end ? changedDate : date\r\n                               :\r\n                               changeableEventStart === changeableEventEnd ? changeableEventStart : changeableEventDate\r\n                       }\r\n                       onChange={changeableEvent === null ? (e) => handleChange(e) : (e) => handleChange(e, 'edit')}/>\r\n                <RiCalendar2Line color=\"#D6D6D6\" size={20}/>\r\n            </div>\r\n            <div className=\"event__time\">\r\n                <input className={errorMessage && time === '' ? \"error\" : undefined} name=\"time\" type=\"time\"\r\n                       placeholder={errorMessage ? \"enter time event\" : \"event time\"}\r\n                       value={changeableEvent !== null ? changeableEvent.time : time}\r\n                       onChange={changeableEvent === null ? (e) => handleChange(e) : (e) => handleChange(e, 'edit')}/>\r\n                {/*<IoMdTime color=\"#D6D6D6\" size={20} />*/}\r\n            </div>\r\n            <div className=\"event__notes\">\r\n                <input className={errorMessage && notes === '' ? \"error\" : undefined} name=\"notes\" type=\"text\"\r\n                       placeholder={errorMessage ? \"input notes event\" : \"event notes\"}\r\n                       value={changeableEvent !== null ? changeableEvent.notes : notes}\r\n                       onChange={changeableEvent === null ? (e) => handleChange(e) : (e) => handleChange(e, 'edit')}/>\r\n            </div>\r\n            <div className=\"event__buttons\">\r\n                <span className=\"event__cancel\"\r\n                      onClick={clickEvent === 'edit' ? () => deleteEvent(changeableEvent.id) : close}>{clickEvent === 'edit' ? 'Discard' : 'Cancel'}</span>\r\n                <span className=\"event__save\"\r\n                      onClick={clickEvent === 'edit' ? editEvent : save}>{clickEvent === 'edit' ? 'Edit' : 'Save'}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nEventModal.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    start: PropTypes.string,\r\n    end: PropTypes.string,\r\n    time: PropTypes.number,\r\n    notes: PropTypes.string,\r\n    open: PropTypes.bool,\r\n    save: PropTypes.func,\r\n    close: PropTypes.func,\r\n    clickEvent: PropTypes.string,\r\n    errorMessage: PropTypes.bool,\r\n    editEvent: PropTypes.func,\r\n    deleteEvent: PropTypes.func,\r\n}\r\n\r\nexport default EventModal;","export const ADD_EVENT = 'ADD_EVENT';\r\n\r\nexport const RESIZE_AND_DRAG_EVENT = 'RESIZE_AND_DRAG_EVENT';\r\n\r\nexport const CHANGE_EVENT = 'CHANGE_EVENT';\r\n\r\nexport const DELETE_EVENT = 'DELETE_EVENT'\r\n\r\nexport const addEvent = payload => ({\r\n    type: ADD_EVENT,\r\n    payload\r\n});\r\n\r\nexport const resizeAndDragEvent = payload => ({\r\n    type:RESIZE_AND_DRAG_EVENT,\r\n    payload\r\n});\r\n\r\nexport const changeEvent = payload => ({\r\n    type: CHANGE_EVENT,\r\n    payload\r\n});\r\n\r\nexport const deleteEvent = payload => ({\r\n    type: DELETE_EVENT,\r\n    payload\r\n});","import React, {Component, Children} from \"react\";\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport {v4 as id} from 'uuid';\r\nimport EventModal from \"../../components/EventModal/EventModal\";\r\nimport moment from 'moment';\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\r\nimport * as EventActions from '../../actions/event';\r\nimport {connect} from 'react-redux';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.scss'\r\nimport './styles.scss';\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\r\nconst currentDate = moment().toDate();\r\n\r\nconst Date = ({children, value}) =>\r\n    React.cloneElement(Children.only(children), {\r\n        style: {\r\n            ...children.style,\r\n            backgroundColor: value.toDateString() === currentDate.toDateString() && '#F5F6FA'\r\n        }\r\n    });\r\n\r\n\r\nclass CalendarContainer extends Component {\r\n\r\n    state = {\r\n        displayDragItemInCell: true,\r\n        events: this.props.events,\r\n        openEventModal: false,\r\n        left: null,\r\n        top: null,\r\n        newEvent: {\r\n            id: null,\r\n            title: '',\r\n            start: '',\r\n            end: '',\r\n            time: '',\r\n            notes: '',\r\n            allDay: false\r\n        },\r\n        clickEvent: '',\r\n        changeableEvent: null,\r\n        errorMessage: false\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.events !== prevProps.events) {\r\n            this.setState({events: this.props.events})\r\n        }\r\n    }\r\n\r\n    handleDragStart = event => {\r\n        this.setState({draggedEvent: event})\r\n    }\r\n\r\n    dragFromOutsideItem = () => {\r\n        return this.state.draggedEvent\r\n    }\r\n\r\n    onDropFromOutside = ({start, end, allDay}) => {\r\n        const {draggedEvent} = this.state;\r\n        const event = {\r\n            id: draggedEvent.id,\r\n            title: draggedEvent.title,\r\n            start,\r\n            end,\r\n            allDay: allDay,\r\n        }\r\n\r\n        this.setState({draggedEvent: null})\r\n        this.moveEvent({event, start, end})\r\n    }\r\n\r\n    moveEvent = ({event, start, end, isAllDay: droppedOnAllDaySlot}) => {\r\n        const {events} = this.state;\r\n        const {resizeAndDragEvent} = this.props;\r\n\r\n        let allDay = event.allDay\r\n\r\n        if (!event.allDay && droppedOnAllDaySlot) {\r\n            allDay = true\r\n        } else if (event.allDay && !droppedOnAllDaySlot) {\r\n            allDay = false\r\n        }\r\n        const nextEvents = events.map(existingEvent => {\r\n            return existingEvent.id === event.id\r\n                ? {...existingEvent, start, end}\r\n                : existingEvent\r\n        })\r\n        resizeAndDragEvent(nextEvents);\r\n    }\r\n\r\n    resizeEvent = ({event, start, end}) => {\r\n        const {events} = this.state;\r\n        const {resizeAndDragEvent} = this.props;\r\n        const nextEvents = events.map(existingEvent => {\r\n            return existingEvent.id === event.id\r\n                ? {...existingEvent, start, end}\r\n                : existingEvent\r\n        })\r\n        resizeAndDragEvent(nextEvents);\r\n    }\r\n\r\n    openEventModal = (event, clickEvent) => {\r\n        let hours = new window.Date().setHours(0);\r\n        let today = new window.Date(hours).setMinutes(0);\r\n        let start = event.start.setMinutes(1);\r\n        if (new window.Date(start).getTime() < new window.Date(today).getTime()) {\r\n            alert('Choose a valid date')\r\n        } else {\r\n            if (event.resourceId === null || (event.box === undefined && event.bounds === undefined)) {\r\n                return false;\r\n            } else {\r\n                let left = event.bounds === undefined ? event.box.x : event.bounds.x;\r\n                let top = event.bounds === undefined ? event.box.y : event.bounds.y;\r\n                this.setState(oldState => {\r\n                    return {\r\n                        openEventModal: true,\r\n                        left: left,\r\n                        top: top,\r\n                        clickEvent: clickEvent,\r\n                        newEvent: {\r\n                            ...oldState.newEvent,\r\n                            id: id(),\r\n                            start: event.start,\r\n                            end: event.end,\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    closeEventModal = () => {\r\n        this.setState({\r\n            openEventModal: false,\r\n            clickEvent: '',\r\n            changeableEvent: null,\r\n            errorMessage: false,\r\n            newEvent: {\r\n                id: null,\r\n                title: '',\r\n                start: '',\r\n                end: '',\r\n                time: '',\r\n                notes: '',\r\n                allDay: false\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = ({target: {name, value}}, event) => {\r\n        event === 'edit'\r\n            ?\r\n            this.setState(prevState => {\r\n                return {\r\n                    changeableEvent: {\r\n                        ...prevState.changeableEvent,\r\n                        [name]: value\r\n                    }\r\n                }\r\n            })\r\n            :\r\n            this.setState(prevState => {\r\n                return {\r\n                    newEvent: {\r\n                        ...prevState.newEvent,\r\n                        [name]: value,\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    addNewEvent = () => {\r\n        const {addEvent} = this.props;\r\n        const {newEvent} = this.state;\r\n        if (newEvent.title === '' || newEvent.start === '' || newEvent.time === '' || newEvent.notes === '') {\r\n            this.setState({\r\n                errorMessage: true\r\n            })\r\n        } else {\r\n            addEvent(this.state.newEvent);\r\n            this.setState({\r\n                openEventModal: false,\r\n                errorMessage: false,\r\n                newEvent: {\r\n                    id: null,\r\n                    title: '',\r\n                    start: '',\r\n                    end: '',\r\n                    time: '',\r\n                    notes: '',\r\n                    allDay: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    editEvent = () => {\r\n        const {changeEvent} = this.props;\r\n        changeEvent(this.state.changeableEvent);\r\n        this.setState({\r\n            openEventModal: false,\r\n            changeableEvent: null\r\n        })\r\n    };\r\n\r\n    deleteEvent = (id) => {\r\n        const {deleteEvent} = this.props;\r\n        deleteEvent(id);\r\n        this.setState({\r\n            openEventModal: false,\r\n            changeableEvent: null\r\n        })\r\n    }\r\n\r\n    chooseEvent = (e, clickEvent, event) => {\r\n        const {events} = this.state;\r\n        const findEvent = events.find(event => event.id === e.id);\r\n        let left = event.pageX;\r\n        let top = event.pageY;\r\n        this.setState({\r\n            openEventModal: true,\r\n            left: left,\r\n            top: top,\r\n            clickEvent: clickEvent,\r\n            changeableEvent: findEvent\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {openEventModal, left, top, newEvent, clickEvent, changeableEvent, errorMessage} = this.state;\r\n        return (\r\n            <div className=\"calendar\">\r\n                <span className=\"calendar__title\">Calendar View</span>\r\n                <EventModal save={this.addNewEvent}\r\n                            event={newEvent}\r\n                            handleChange={(e, event) => this.handleChange(e, event)}\r\n                            close={this.closeEventModal}\r\n                            open={openEventModal}\r\n                            style={{left: left - 100, top: top}}\r\n                            clickEvent={clickEvent}\r\n                            changeableEvent={changeableEvent}\r\n                            errorMessage={errorMessage}\r\n                            editEvent={this.editEvent}\r\n                            deleteEvent={(id) => this.deleteEvent(id)}\r\n                />\r\n                <DragAndDropCalendar\r\n                    culture=\"en\"\r\n                    localizer={localizer}\r\n                    events={this.state.events}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    defaultView=\"month\"\r\n                    style={{height: 635, width: '100%'}}\r\n                    selectable={true}\r\n                    onEventDrop={this.moveEvent}\r\n                    resizable\r\n                    onEventResize={this.resizeEvent}\r\n                    popup\r\n                    dragFromOutsideItem={\r\n                        this.state.displayDragItemInCell ? this.dragFromOutsideItem : null\r\n                    }\r\n                    onDropFromOutside={this.onDropFromOutside}\r\n                    handleDragStart={this.handleDragStart}\r\n                    step={60}\r\n                    onSelectEvent={(e, event) => this.chooseEvent(e, 'edit', event)}\r\n                    onSelectSlot={(e) => openEventModal ? undefined : this.openEventModal(e, 'create')}\r\n                    components={{\r\n                        dateCellWrapper: Date,\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    EventActions\r\n)(CalendarContainer);","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Sidebar = () => (\r\n    <div className=\"sidebar\">\r\n        <div className=\"sidebar__header\">\r\n            <span>impekable</span>\r\n        </div>\r\n        <ul className=\"sidebar__list\">\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/home.svg\" alt=\"home\"/>\r\n                <a href=\"#\">Home</a>\r\n            </li>\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/home.svg\" alt=\"home\"/>\r\n                <a href=\"#\">Dashboard</a>\r\n            </li>\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/inbox.svg\" alt=\"inbox\"/>\r\n                <a href=\"#\">Inbox</a>\r\n            </li>\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/home.svg\" alt=\"home\"/>\r\n                <a href=\"#\">Products</a>\r\n            </li>\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/invoices.svg\" alt=\"invoices\"/>\r\n                <a href=\"#\">Invoices</a>\r\n            </li>\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/home.svg\" alt=\"home\"/>\r\n                <a href=\"#\">Customers</a>\r\n            </li>\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/home.svg\" alt=\"home\"/>\r\n                <a href=\"#\">Chat Room</a>\r\n            </li>\r\n            <li  className=\"active\">\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/calendar.svg\" alt=\"calendar\"/>\r\n                <a href=\"#\">Calendar</a>\r\n            </li>\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/help.svg\" alt=\"help\"/>\r\n                <a href=\"#\">Help Center</a>\r\n            </li>\r\n            <li>\r\n                <img className=\"sidebar__icon\" src=\"../../assets/icons/settings.svg\" alt=\"settings\"/>\r\n                <a href=\"#\">Settings</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport './styles.scss';\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"header__search\">\r\n            <img src=\"../../assets/icons/search.svg\" alt=\"search\"/>\r\n            <input type=\"text\" placeholder=\"Search transactions, invoices or help\" />\r\n        </div>\r\n        <div className=\"header__user-block\">\r\n            <div className=\"header__icons\">\r\n                <img src=\"../../assets/icons/help.svg\" alt=\"help\"/>\r\n                <img src=\"../../assets/icons/bell.svg\" alt=\"chat\"/>\r\n                <img src=\"../../assets/icons/bell.svg\" alt=\"notification\"/>\r\n            </div>\r\n            <div className=\"header__user\">\r\n                <span className=\"header__user-name\">John Doe</span>\r\n                <img src=\"../../assets/icons/arrow.svg\" alt=\"down\"/>\r\n                <img className=\"header__user-avatar\" src=\"../../assets/icons/avatar.png\" alt=\"user\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React, {Component} from 'react';\nimport CalendarContainer from '../Calendar/Calendar';\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport Header from \"../../components/Header/Header\";\nimport {connect} from 'react-redux';\nimport * as EventActions from '../../actions/event';\nimport './styles.scss';\n\nclass App extends Component {\n\n    render() {\n        const {events} = this.props;\n        return (\n            <div className=\"app\">\n                <Header/>\n                <Sidebar/>\n                <div className=\"app__content\">\n                    <div className=\"app__content-block\">\n                        <span className=\"app__content-title\">Calendar</span>\n                        <CalendarContainer events={events} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    events: state.events.events\n})\n\nexport default connect(\n    mapStateToProps,\n    EventActions\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ADD_EVENT, RESIZE_AND_DRAG_EVENT, CHANGE_EVENT, DELETE_EVENT} from \"../actions/event\";\r\n\r\nconst initialState = {\r\n    events: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_EVENT:\r\n            const hours = Number(action.payload.time.split(':')[0]);\r\n            const minutes = Number(action.payload.time.split(':')[1]);\r\n            action.payload.start = new Date(new Date(action.payload.start).setHours(hours));\r\n            action.payload.start = new Date(new Date(action.payload.start).setMinutes(minutes));\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case RESIZE_AND_DRAG_EVENT:\r\n            return {\r\n                ...state,\r\n                events: action.payload\r\n            }\r\n        case CHANGE_EVENT:\r\n            const modifierEvent = action.payload;\r\n            const event = state.events.find(e => e.id === modifierEvent.id);\r\n            if (event !== modifierEvent) {\r\n                let array = state.events.filter(e => e.id !== modifierEvent.id);\r\n                array.push(modifierEvent);\r\n                return {\r\n                    ...state,\r\n                    events: array\r\n                }\r\n            }\r\n            return state;\r\n        case DELETE_EVENT:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport events from './events';\r\n\r\nexport default combineReducers({\r\n    events\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducers/index';\n\nconst store = createStore(\n    reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n            <App />\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}